@startuml
class Library_Material {
    + title: str
    + year_of_publication: int
    + available: bool
    __
    + __init__(self, title: str, year_of_publication: int, available: bool = True)
    + get_title()
    + set_title(title: str)
    + get_year_of_publication()
    + set_year_of_publication(year_of_publication: int)
    + is_available()
    + set_available(available: bool)
    + loan()
    + return_material()
    + {static} search(materials: list, title: str = None, year_of_publication: int = None): list
}

class Book {
    + author: str
    + number_of_pages: int
    __
    + __init__(self, title: str, year_of_publication: int, author: str, number_of_pages: int, available: bool = True)
    + get_author()
    + set_author(author: str)
    + get_number_of_pages()
    + set_number_of_pages(number_of_pages: int)
}

class Magazine {
    + edition_number: int
    + month_of_publication: str
    __
    + __init__(self, title: str, year_of_publication: int, edition_number: int, month_of_publication: str, available: bool = True)
    + get_edition_number()
    + set_edition_number(edition_number: int)
    + get_month_of_publication()
    + set_month_of_publication(month_of_publication: str)
}

class DVD {
    + director: str
    + duration: int
    __
    + __init__(self, title: str, year_of_publication: int, director: str, duration: int, available: bool = True)
    + get_director()
    + set_director(director: str)
    + get_duration()
    + set_duration(duration: int)
}

Library_Material <|-- Book
Library_Material <|-- Magazine
Library_Material <|-- DVD
@enduml